import "./Maybe" exposing ( Maybe, Just, Nothing, map, withDefault )
import "./Test" exposing ( equals )

exposing ( testMapWithJust, testMapWithNothing, testWithDefaultWithJust, testWithDefaultWithNothing )

justOne: Maybe number
justOne =
    Just { value: 1 }

justTwo: Maybe number
justTwo =
    Just { value: 2 }

increment: number -> number
increment x =
    x + 1

testMapWithJust: boolean -> void
testMapWithJust a? =
    map increment justOne
        |> equals justTwo

testMapWithNothing: boolean -> void
testMapWithNothing a? =
    map increment Nothing
        |> equals Nothing

testWithDefaultWithJust: boolean -> void
testWithDefaultWithJust a? =
    withDefault 0 justOne
        |> equals 1

testWithDefaultWithNothing: boolean -> void
testWithDefaultWithNothing a? =
    withDefault 0 Nothing
        |> equals 0
